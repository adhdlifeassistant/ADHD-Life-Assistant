'use client';

import { UserProfile, CHRONOTYPES, ADHD_CHALLENGES } from '@/types/profile';
import { MoodType } from '@/types/mood';

export function getPersonalizedGreeting(profile: UserProfile, mood: MoodType): string {
  const name = profile.name || 'toi';
  const chronotypeData = CHRONOTYPES[profile.chronotype];
  const currentHour = new Date().getHours();
  
  // D√©termination du moment de la journ√©e selon le chronotype
  let timeOfDay = '';
  if (profile.chronotype === 'morning' && currentHour < 12) {
    timeOfDay = ' ce matin';
  } else if (profile.chronotype === 'evening' && currentHour >= 17) {
    timeOfDay = ' ce soir';
  } else if (currentHour < 12) {
    timeOfDay = ' ce matin';
  } else if (currentHour < 17) {
    timeOfDay = ' cet apr√®s-midi';
  } else {
    timeOfDay = ' ce soir';
  }

  // Contexte m√©dication si applicable
  let medicationContext = '';
  if (profile.medications.length > 0) {
    const nextMed = getNextMedication(profile.medications);
    if (nextMed) {
      medicationContext = ` N'oublie pas ton ${nextMed.name} ${nextMed.upcoming ? 'bient√¥t' : 'si ce n\'est pas d√©j√† fait'}.`;
    }
  }

  // Messages personnalis√©s selon le mood
  const greetings = {
    energetic: [
      `Salut ${name} ! üåü Je sens une belle √©nergie${timeOfDay} !${medicationContext} Qu'est-ce qu'on va accomplir ensemble ?`,
      `Hey ${name} ! ‚ö° Tu rayonnes${timeOfDay} ! ${profile.challenges.length > 0 ? `Parfait pour s'attaquer √† tes d√©fis ${profile.challenges.map(id => ADHD_CHALLENGES[id]?.label).slice(0,1)} !` : 'Que puis-je faire pour toi ?'}`,
      `${name} ! üöÄ Cette √©nergie${timeOfDay} est fantastique !${medicationContext} Pr√™t pour une session productive ?`
    ],
    
    normal: [
      `Salut ${name} !${timeOfDay.replace(' ce', ' Bon')} üòä${medicationContext} Comment √ßa va aujourd'hui ?`,
      `Hey ${name} ! ${chronotypeData ? `Vu que tu es ${chronotypeData.label.toLowerCase()}, c'est ${isOptimalTime(profile.chronotype, currentHour) ? 'le bon moment' : 'peut-√™tre pas ton heure de pointe, mais on peut quand m√™me bien bosser'} !` : 'Comment te sens-tu ?'}`,
      `Bonjour ${name} !${timeOfDay} ‚ú® Je suis l√† pour t'accompagner. Dis-moi ce dont tu as besoin.`
    ],
    
    tired: [
      `Salut ${name}... üò¥ Je vois que c'est un peu dur${timeOfDay}.${medicationContext} Pas de pression, on y va √† ton rythme.`,
      `Hey ${name} üíô Fatigue${timeOfDay} ? ${profile.chronotype !== 'flexible' ? `Normal, c'est ${isOptimalTime(profile.chronotype, currentHour) ? 'pas' : ''} ton cr√©neau habituel.` : ''} On peut prendre √ßa cool.`,
      `${name}, courage${timeOfDay} ü§ó${medicationContext} Qu'est-ce qui t'aiderait le plus maintenant ?`
    ],
    
    stressed: [
      `Salut ${name} üíô Je sens du stress${timeOfDay}...${medicationContext} Respire un coup, je suis l√†.`,
      `Hey ${name} ü´Ç √áa semble tendu${timeOfDay}. ${profile.challenges.includes('emotional-regulation') ? 'Je sais que la gestion des √©motions est un de tes d√©fis, on va g√©rer √ßa ensemble.' : 'On va d√©compresser ensemble.'}`,
      `${name}, tout va bien se passer üå∏${medicationContext} Dis-moi ce qui te tracasse.`
    ],
    
    sad: [
      `Salut ${name} üíú${timeOfDay}... Je suis l√† pour toi.${medicationContext} Pas besoin d'√™tre fort en permanence.`,
      `Hey ${name} ü§ó Jour difficile${timeOfDay} ? ${profile.challenges.includes('emotional-regulation') ? 'Les √©motions sont complexes avec le ADHD, c\'est normal.' : 'C\'est ok de ne pas aller bien.'} Je t'√©coute.`,
      `${name} üíô Prends ton temps${timeOfDay}.${medicationContext} Tu veux en parler ou juste qu'on fasse quelque chose ensemble ?`
    ]
  };

  const moodGreetings = greetings[mood];
  const randomIndex = Math.floor(Math.random() * moodGreetings.length);
  return moodGreetings[randomIndex];
}

function getNextMedication(medications: UserProfile['medications']) {
  const now = new Date();
  const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;
  
  // Trouve la prochaine m√©dication dans les 2 heures
  for (const med of medications) {
    const medTime = med.time;
    const medHour = parseInt(medTime.split(':')[0]);
    const medMinute = parseInt(medTime.split(':')[1]);
    const medDate = new Date();
    medDate.setHours(medHour, medMinute, 0, 0);
    
    const timeDiff = medDate.getTime() - now.getTime();
    const hoursDiff = timeDiff / (1000 * 60 * 60);
    
    if (hoursDiff > 0 && hoursDiff <= 2) {
      return { ...med, upcoming: true };
    }
  }
  
  // Si pas de m√©dication dans les 2h, retourne la premi√®re de la journ√©e
  return medications.length > 0 ? { ...medications[0], upcoming: false } : null;
}

function isOptimalTime(chronotype: UserProfile['chronotype'], currentHour: number): boolean {
  const optimal = CHRONOTYPES[chronotype]?.peakHours || [];
  return optimal.includes(currentHour);
}

export function getPersonalizedFallback(profile: UserProfile, mood: MoodType): string {
  const name = profile.name || 'toi';
  
  const fallbacks = {
    energetic: `${name}, petit souci technique mais √ßa ne nous arr√™tera pas ! Qu'est-ce que tu voulais me dire ?`,
    normal: `D√©sol√© ${name}, petit probl√®me de connexion. Tu peux reformuler ?`,
    tired: `${name}... petit bug technique. Pas de stress, reprends quand tu peux.`,
    stressed: `${name}, oups... petit probl√®me technique. Respire, on r√©essaye ?`,
    sad: `Pardon ${name}... probl√®me technique. Je suis toujours l√† pour toi.`
  };
  
  return fallbacks[mood];
}